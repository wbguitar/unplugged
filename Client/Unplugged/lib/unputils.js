// Generated by CoffeeScript 1.7.1
(function() {
  window.UnpUtils = (function() {
    function UnpUtils() {}

    UnpUtils.randomHex = function(howMany) {
      var i, _cChar, _cNum, _i, _ref, _results, _retVal;
      if (howMany === null) {
        howMany = 1;
      }
      _retVal = '';
      _results = [];
      for (i = _i = 0, _ref = howMany - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        _cChar = '';
        _cNum = Math.floor(Math.random() * 16);
        if (_cNum < 10) {
          _cChar += _cNum.toString();
        } else {
          switch (_cNum) {
            case 10:
              _cChar = 'a';
              break;
            case 11:
              _cChar = 'b';
              break;
            case 12:
              _cChar = 'c';
              break;
            case 13:
              _cChar = 'd';
              break;
            case 14:
              _cChar = 'e';
              break;
            case 14:
              _cChar = 'f';
          }
        }
        _results.push(_retVal += _cChar);
      }
      return _results;
    };

    UnpUtils.randomColor = function(colorFrom, colorTo) {
      return UnpUtils.colorBetween(colorFrom, colorTo, Math.random());
    };

    UnpUtils.colorBetween = function(colorFrom, colorTo, colorPoint) {
      var _aDiff, _bDiff, _cRandom, _gDiff, _rDiff;
      if (colorFrom === null) {
        colorFrom = new UnpColor(0, 0, 0, 1);
      }
      if (colorTo === null) {
        colorTo = new UnpColor(255, 255, 255, 1);
      }
      if (colorPoint === null) {
        colorPoint = 0.5;
      }
      _rDiff = colorTo.Red - colorFrom.Red;
      _gDiff = colorTo.Green - colorFrom.Green;
      _bDiff = colorTo.Blue - colorFrom.Blue;
      _aDiff = colorTo.Alpha - colorFrom.Alpha;
      _cRandom = Math.random();
      _rDiff = Math.round(_rDiff * colorPoint);
      _gDiff = Math.round(_gDiff * colorPoint);
      _bDiff = Math.round(_bDiff * colorPoint);
      _aDiff = _aDiff * colorPoint;
      return new UnpColor(colorFrom.Red + _rDiff, colorFrom.Green + _gDiff, colorFrom.Blue + _bDiff, colorFrom.Alpha + _aDiff);
    };

    UnpUtils.getQueryStringParam = function(paramName) {
      var _qStringMatch;
      _qStringMatch = document.location.search.match(new RegExp(paramName + '=([^&]*)'));
      if (_qStringMatch !== null) {
        _qStringMatch = _qStringMatch[1];
      }
      return _qStringMatch;
    };

    UnpUtils.getRefreshRate = function() {
      return 20;
    };

    return UnpUtils;

  })();

}).call(this);

//# sourceMappingURL=unputils.map
